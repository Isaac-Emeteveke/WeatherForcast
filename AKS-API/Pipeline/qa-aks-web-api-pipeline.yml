# trigger:
#   branches:
#     include:
#     - FF_QA_WebApps_Release
#   paths:
#     include:
#     - 'Web Apps/FieldForce.WebAPI'
#     - Libraries/FieldForce.BusinessLogic
#     - Libraries/FieldForce.Repository    
#     - Libraries/FieldForce.Storage
#     - Libraries/FieldForce.DAL
#     - Libraries/FieldForce.Util
#     - Libraries/FieldForce.Model

schedules:
- cron: "0 15 * * 1-5"
  displayName: Mon-Fri build at 8pm
  branches:
    include:
    - FF_QA_WebApps_Release

  always: true
# no PR triggers
pr: none
trigger: none
pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: 'QA-Variables'
  - name: 'deploymentManifestPath'
    value: 'Deployment\ Scripts/Kubernetes/qa-fieldforce-webapi.yaml' 

stages:
- stage: Build
  jobs:
    - job: 'BuildAndPublish'
      steps:     
        - task: Bash@3
          displayName: 'Apply config changes from ffproductqaapi'
          inputs:
            targetType: 'inline'
            script: |
              $PWD
              cd AKS-API
              ls
           

        - task: NuGetAuthenticate@1
          displayName: 'Add nuget feed credentials to environment variable'
        
        - task: Docker@2
          displayName: 'Build Docker image'
          inputs:
            containerRegistry: 'QA Container Registry'
            repository: 'qa-webapi'
            command: 'build'
            Dockerfile: 'AKS-API/Dockerfile'
            buildContext: '.'
            arguments: '--build-arg FEED_ACCESSTOKEN=$(VSS_NUGET_ACCESSTOKEN)'
            tags: |
              $(Build.BuildId)
              latest
            addPipelineData: false
            addBaseImageData: false

        - task: Docker@2
          displayName: 'Push image to repository'
          inputs:
            command: push
            containerRegistry: 'QA Container Registry'
            repository: 'qa-webapi'
            tags: |
              $(Build.BuildId)
              latest
 
# - stage: Deploy
#   jobs:
#     - deployment: QA_WebAPI
#       displayName: 'Deploy Web API to QA environment'
#       environment: 'Product-QA'
#       strategy:
#         runOnce:
#           deploy:
#             steps:
#               - checkout: self

#               - task: AzureCLI@2
#                 displayName: 'Add Client ID for managed identity in deployment manifest'
#                 inputs:
#                   azureSubscription: 'Azure DevTest subscription 1(eb68c7f5-b517-49e4-9271-')'
#                   scriptType: 'bash'
#                   scriptLocation: 'inlineScript'
#                   inlineScript: |
#                     CLIENT_ID=$(az identity show --name qa-apps-cluster-agentpool --resource-group MC_FieldForce-QA-RG_qa-apps-cluster_eastus --query clientId)
                    
#                     sed -i "s/<insert-managed-identity-client-id-here>/$CLIENT_ID/g" ${{ variables.deploymentManifestPath }}

#               - task: Kubernetes@1
#                 displayName: 'Apply deployment manifest (creates new if not exists)'
#                 inputs:
#                   connectionType: 'Kubernetes Service Connection'
#                   kubernetesServiceEndpoint: 'QA K8s cluster (4k)'
#                   command: 'apply'
#                   arguments: '-f "${{ variables.deploymentManifestPath }}"'
#                   secretType: 'dockerRegistry'
#                   containerRegistryType: 'Azure Container Registry'
#                   versionSpec: '1.24.6'
              
#               - task: Kubernetes@1
#                 displayName: 'Set latest image for the above deployment'
#                 inputs:
#                   connectionType: 'Kubernetes Service Connection'
#                   kubernetesServiceEndpoint: 'QA K8s cluster (4k)'
#                   command: 'set'
#                   arguments: 'image deployment.apps/qa-fieldforce-webapi fieldforce-webapi=imga.azurecr.io/fieldforce-webapi:$(Build.BuildId)'
#                   secretType: 'dockerRegistry'
#                   containerRegistryType: 'Azure Container Registry'
#                   versionSpec: '1.24.6'