# trigger:
#   branches:
#     include:
#     - FF_QA_WebApps_Release
#   paths:
#     include:
#     - 'Web Apps/FieldForce.WebAPI'
#     - Libraries/FieldForce.BusinessLogic
#     - Libraries/FieldForce.Repository    
#     - Libraries/FieldForce.Storage
#     - Libraries/FieldForce.DAL
#     - Libraries/FieldForce.Util
#     - Libraries/FieldForce.Model

schedules:
- cron: "0 15 * * 1-5"
  displayName: Mon-Fri build at 8pm
  branches:
    include:
    - WeatherForcast

  always: true
# no PR triggers
pr: none
trigger: none
pool:
  vmImage: 'ubuntu-latest'


stages:
- stage: Build
  jobs:
    - job: 'BuildAndPublish'
      steps:     
        - task: Bash@3
          displayName: 'Apply config changes from ffproductqaapi'
          inputs:
            targetType: 'inline'
            script: |
              $PWD
              cd AKS-API
              ls
           

        - task: NuGetAuthenticate@1
          displayName: 'Add nuget feed credentials to environment variable'
        
        - task: Docker@2
          displayName: 'Build Docker image'
          inputs:
            containerRegistry: 'QA Container Registry'
            repository: 'qa-webapi'
            command: 'build'
            Dockerfile: 'AKS-API/Dockerfile'
            buildContext: '.'
            arguments: '--build-arg FEED_ACCESSTOKEN=$(VSS_NUGET_ACCESSTOKEN)'
            tags: |
              $(Build.BuildId)
              latest
            addPipelineData: false
            addBaseImageData: false

        - task: Docker@2
          displayName: 'Push image to repository'
          inputs:
            command: push
            containerRegistry: 'QA Container Registry'
            repository: 'qa-webapi'
            tags: |
              $(Build.BuildId)
              latest
 
- stage: Deploy
  jobs:
    - deployment: QA_WebAPI
      displayName: 'Deploy Web API to QA environment'
      environment: 'Product-QA'
      strategy:
        runOnce:
          deploy:
            steps:
              - checkout: self

              - task: Kubernetes@1
                displayName: 'Apply deployment manifest (creates new if not exists)'
                inputs:
                  connectionType: 'Kubernetes Service Connection'
                  kubernetesServiceEndpoint: 'kubernetes cluster'
                  command: 'apply'
                  arguments: '-f AKS-API/ManifesrFiles/qa-webapi.yaml'
                  secretType: 'dockerRegistry'
                  containerRegistryType: 'Azure Container Registry'
                  versionSpec: '1.24.6'
              
              - task: Kubernetes@1
                displayName: 'Set latest image for the above deployment'
                inputs:
                  connectionType: 'Kubernetes Service Connection'
                  kubernetesServiceEndpoint: 'kubernetes cluster'
                  command: 'set'
                  arguments: 'image deployment.apps/qa-ff-webapi ff-webapi=itestdevacr.azurecr.io/qa-webapi:$(Build.BuildId)'
                  secretType: 'dockerRegistry'
                  containerRegistryType: 'Azure Container Registry'
                  versionSpec: '1.24.6'
